generator client {
  provider = "prisma-client-ts"
  output   = "../src/generated/prisma-client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  role          Role          @default(USER)
  posts         Post[]
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  like_posts    LikePost[]
  like_comments LikeComment[]

  @@map("users")
}

model Post {
  id         String     @id @default(cuid())
  title      String
  content    String?
  published  Boolean    @default(false)
  author     User       @relation(fields: [author_id], references: [id], onDelete: Restrict)
  author_id  String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  comments   Comment[]
  like_posts LikePost[]

  @@map("posts")
}

model Comment {
  id            String        @id @default(cuid())
  content       String
  post          Post          @relation(fields: [post_id], references: [id], onDelete: Restrict)
  post_id       String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  like_comments LikeComment[]

  @@map("comments")
}

model LikeComment {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Restrict)
  user_id    String
  comment    Comment  @relation(fields: [comment_id], references: [id], onDelete: Restrict)
  comment_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("like_comments")
}

model LikePost {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Restrict)
  user_id    String
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Restrict)
  post_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("like_posts")
}
